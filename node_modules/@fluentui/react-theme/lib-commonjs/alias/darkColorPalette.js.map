{"version":3,"sources":["alias/darkColorPalette.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,cAAA,gBAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,MAAA,kBAAA,gBAAA,OAAA,CAAA,qBAAA,CAAA;;AAGA,MAAM,wBAAwB,gBAAG,kBAAA,CAAA,sBAAA,CAAuB,MAAvB,CAA8B,CAAC,GAAD,EAAM,WAAN,KAAqB;EAClF,MAAM,KAAK,GAAG,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,WAAxB,KAAwC,WAAW,CAAC,KAAZ,CAAkB,CAAlB,CAAtD;EACA,MAAM,iBAAiB,GAAG;IACxB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,OAD7C;IAExB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,OAF7C;IAGxB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,OAH7C;IAIxB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,MAJ7C;IAKxB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,MAL7C;IAMxB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,MAN7C;IAOxB,CAAC,eAAe,KAAK,cAArB,GAAsC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,MAP9C;IAQxB,CAAC,eAAe,KAAK,SAArB,GAAiC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC,OARzC;IASxB,CAAC,eAAe,KAAK,SAArB,GAAiC,cAAA,CAAA,kBAAA,CAAmB,WAAnB,EAAgC;EATzC,CAA1B;EAYA,OAAO,EAAE,GAAG,GAAL;IAAU,GAAG;EAAb,CAAP;AACD,CAfgC,EAe9B,EAf8B,CAAjC;AAiBA,MAAM,yBAAyB,gBAAG,kBAAA,CAAA,uBAAA,CAAwB,MAAxB,CAA+B,CAAC,GAAD,EAAM,WAAN,KAAqB;EACpF,MAAM,KAAK,GAAG,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,WAAxB,KAAwC,WAAW,CAAC,KAAZ,CAAkB,CAAlB,CAAtD;EACA,MAAM,iBAAiB,GAAG;IACxB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,mBAAA,CAAoB,WAApB,EAAiC,OAD9C;IAExB,CAAC,eAAe,KAAK,aAArB,GAAqC,cAAA,CAAA,mBAAA,CAAoB,WAApB,EAAiC,MAF9C;IAGxB,CAAC,eAAe,KAAK,cAArB,GAAsC,cAAA,CAAA,mBAAA,CAAoB,WAApB,EAAiC;EAH/C,CAA1B;EAMA,OAAO,EAAE,GAAG,GAAL;IAAU,GAAG;EAAb,CAAP;AACD,CATiC,EAS/B,EAT+B,CAAlC;AAWa,OAAA,CAAA,kBAAA,GAAyC,EAAE,GAAG,wBAAL;EAA+B,GAAG;AAAlC,CAAzC","sourcesContent":["import { statusSharedColors, personaSharedColors } from '../global/colorPalette';\nimport { statusSharedColorNames, personaSharedColorNames } from '../sharedColorNames';\nimport { ColorPaletteTokens, PersonaColorPaletteTokens, StatusColorPaletteTokens } from '../types';\n\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].shade40,\n    [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].shade30,\n    [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,\n    [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].tint30,\n    [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].tint40,\n    [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].tint20,\n    [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].tint30,\n    [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].primary,\n    [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].tint20,\n  };\n\n  return { ...acc, ...sharedColorTokens };\n}, {} as StatusColorPaletteTokens);\n\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].shade30,\n    [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].tint40,\n    [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].tint30,\n  };\n\n  return { ...acc, ...sharedColorTokens };\n}, {} as PersonaColorPaletteTokens);\n\nexport const colorPaletteTokens: ColorPaletteTokens = { ...statusColorPaletteTokens, ...personaColorPaletteTokens };\n"],"sourceRoot":"../src/"}